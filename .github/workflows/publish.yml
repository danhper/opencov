name: Publish and Deploy

on:
  push:
    branches:
      - master

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_ACCESS_SECRET }}
        aws-region: us-east-2
    - name: Login to Amazon ECR (coverage)
      id: login-ecr-coverage
      uses: aws-actions/amazon-ecr-login@v1
    - name: Build, tag, and push image to Amazon ECR (coverage)
      env:
        ECR_REGISTRY: ${{ steps.login-ecr-coverage.outputs.registry }}
        ECR_REPOSITORY: coverage
        IMAGE_TAG: latest
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    - name: Logout of Amazon ECR (coverage)
      if: always()
      run: docker logout ${{ steps.login-ecr-coverage.outputs.registry }}
  # deploy:
  #     runs-on: ubuntu-latest
  #     needs: publish
  #     steps:
  #       - uses: actions/checkout@master
  #       - name: Configure AWS Credentials
  #         uses: aws-actions/configure-aws-credentials@v1
  #         with:
  #           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
  #           aws-secret-access-key: ${{ secrets.AWS_ACCESS_SECRET }}
  #           aws-region: us-east-2

  #       - name: Set up Python/AWS CLI
  #         uses: actions/setup-python@v1
  #         with:
  #           python-version: '3.x'
  #       - name: Initiate deployment
          # run: |	
          #   aws ecs update-service --cluster coverage-prod --service coverage-prod --force-new-deployment --task-definition coverage-prod
