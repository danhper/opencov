
stages:
- test
- pre-build
- build
- deployment
 
variables:
  VAR_KUBE_CONTEXT: $ENV

test:
  stage: test
  image: bitwalker/alpine-elixir-phoenix:1.6.6
  services:
    - postgres:latest
  before_script:
    - export MIX_ENV=test
    - apk --no-cache --update add postgresql-client yarn
    - yarn install
    - cp config/config.sample.exs config/config.exs
    - cp config/local.sample.exs config/local.exs
    - ENV=test make dep db-setup
  script:
    - COVERALLS_REPO_TOKEN="czZaRFhIVEpPYTBqU3JrWm5nZDBGamZHV3Z5bllIeFNsbTA1TzVKMA==" make test
  tags:
    - bare-metal

build-image:
  stage: build
  image: ${CI_REGISTRY}/sre/gudang/docker:1.0.0
  only:
  - triggers
  variables:
    DOCKER_API_VERSION: "1.23"
  before_script:
  - cp config/config.sample.exs config/config.exs
  - cp config/prod.exs config/local.exs
  script:
  - export VERSION=${CI_COMMIT_TAG:-$CI_COMMIT_SHA}
  - docker login -u "${CI_REGISTRY_USER}" -p "$CI_REGISTRY_PASSWORD" "${CI_REGISTRY}"
  - make build push
  tags:
  - build-image

.deploy-template: &deploy-template
  stage: deployment
  image: ${CI_REGISTRY}/sre/gudang/deployment:3.2.0
  tags:
  - bare-metal
  only:
  - triggers                             
  script:
  - export VERSION=${CI_COMMIT_TAG:-$CI_COMMIT_SHA}
  - kubectl config use-context $VAR_KUBE_CONTEXT
  - make deploy
 
deploy:
  <<: *deploy-template    
 
deploy-service:
  <<: *deploy-template
  allow_failure: true
  when: manual
  variables:
    FILE: service
