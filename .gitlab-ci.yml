stages:
- pre-ci
- test
- pre-build
- build
- migrate
- deployment
- post-ci

variables:
  VAR_KUBE_CONTEXT: $ENV

pre-ci:
  stage: pre-ci
  image: appropriate/curl
  only:
  - triggers
  script:
  - export DEPLOYER=${DEPLOYER:1}
  - curl -s "$ISYANA_URL/notify_start?service=$CI_PROJECT_NAME&branch=$CI_COMMIT_REF_NAME&deployer=$DEPLOYER&roles=$ENV&ci_pipeline_id=$CI_PIPELINE_ID"

test:
  stage: test
  image: alpine:3.6
  script:
  - echo "test done"
  cache:
    key: depcache
    paths:
    - $CI_PROJECT_DIR/.depcache

.deploy-template: &deploy-template
  stage: deployment
  image: alpine:3.6
  tags:
  - bare-metal
  only:
  - triggers
  script:
  - echo "deploying"

deploy:
  <<: *deploy-template

deploy-service:
  <<: *deploy-template
  allow_failure: true
  when: manual
  variables:
    FILE: service

post-ci:
  stage: post-ci
  image: appropriate/curl
  when: on_success
  only:
  - triggers
  script:
  - export DEPLOYER=${DEPLOYER:1}
  - curl -s "$ISYANA_URL/notify_done?service=$CI_PROJECT_NAME&branch=$CI_COMMIT_REF_NAME&deployer=$DEPLOYER&roles=$ENV&ci_pipeline_id=$CI_PIPELINE_ID"

post-ci-releaselog:
  stage: post-ci
  image: appropriate/curl
  when: on_success
  only:
  - triggers
  script:
  - ([ ${ENV} = "production" ]) || ([ ${ENV} = "canary" ]) || exit 0
  - timestamp=`date -Iseconds | sed 's/\(.*\)\([0-9]\{2\}\)/\1:\2/'`
  - >
    curl -XPOST -d "{
    \"branch\": \"$BRANCH\",
    \"commit\": \"$CI_COMMIT_SHA\",
    \"pipeline\": \"${ROLES:-$ENV}\",
    \"timestamp\": \"$timestamp\"
    }"
    "$RELEASELOG_URL/notify"

post-ci-failed:
  stage: post-ci
  image: appropriate/curl
  only:
  - triggers
  when: on_failure
  script:
  - export DEPLOYER=${DEPLOYER:1}
  - curl -s "$ISYANA_URL/notify_failed?service=$CI_PROJECT_NAME&branch=$CI_COMMIT_REF_NAME&deployer=$DEPLOYER&roles=$ENV&ci_pipeline_id=$CI_PIPELINE_ID"
